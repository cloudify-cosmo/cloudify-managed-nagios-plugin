#! /usr/bin/env bash
set -e

get_input() {
  var_name=${1}
  if [[ -z "${!var_name}" ]]; then
    message=${2}
    extra_args=${3:-""}
    read ${extra_args} -p "${message}" ${var_name}
    echo "export ${var_name}='${!var_name}'" >> .demo_settings
  else
    echo "${var_name} already set, skipping."
  fi
}

get_hidden_input() {
  var_name=${1}
  message=${2}
  if [[ -z "${!var_name}" ]]; then
      get_input "${var_name}" "${message}" -s
      echo ""
  fi
}

if [[ -f .demo_settings ]]; then
    echo "Loading previous settings from .demo_settings"
    . .demo_settings
fi

echo "This will create several secrets and inputs files to enable running the examples."
echo "It is not recommended that you continue if you are using a shared manager."

get_input aws_subnet_id "Enter aws_subnet_id used for nagios: "
get_input aws_security_group_id "Enter aws_security_group_id used for nagios: "

get_input atest "Enter aws_subnet_id used for nagios: "


get_input cloudify_username "Enter cloudify manager username: "
get_hidden_input cloudify_password "Enter cloudify manager password: "
echo ""

echo "Creating nagios install inputs"
echo "aws_subnet_id: ${aws_subnet_id}
aws_security_group_id: ${aws_security_group_id}" > nagios-blueprint-inputs.yaml

echo "Removing existing secrets (where applicable)..."
for secret in agent_key_private keystone_url keystone_username keystone_password keystone_tenant_name region; do
  cfy secrets delete ${secret} >/dev/null 2>/dev/null
done

echo "Creating secrets"
cfy secrets create -s ${cloudify_username} cloudify_manager_username
cfy secrets create -s ${cloudify_password} cloudify_manager_password
