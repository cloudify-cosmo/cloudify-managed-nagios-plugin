tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.3.dev1/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/2.0.1/plugin.yaml
  - plugin:cloudify-nagiosrest-plugin
  - plugin:arbitrary-command-plugin

inputs:
  image: {}
  flavor: {}
  agent_user:
    default: centos
  management_network_name: {}
  key_name: {}

dsl_definitions:
  openstack_config: &openstack_config
    username: { get_secret: keystone_username }
    password: { get_secret: keystone_password }
    tenant_name: { get_secret: keystone_tenant_name }
    auth_url: { get_secret: keystone_url }
    region: { get_secret: region }

  scale_down_workflow: &specific_scale_down
    workflow_id: scale
    parameters:
      scalable_entity_name: "base_metagroup_host"
      delta: "-2"
      scale_compute: true

node_types:
  monitoredvm:
    derived_from: cloudify.openstack.nodes.Server
    properties:
      nagiosrest_monitoring:
        type: cloudify.datatypes.nagiosrest.Properties
    interfaces:
      cloudify.interfaces.monitoring_agent:
        install: scripts/snmpv3_install
      cloudify.interfaces.monitoring:
        start: nagiosrest.nagiosrest_plugin.tasks.add_monitoring
        stop: nagiosrest.nagiosrest_plugin.tasks.remove_monitoring


node_templates:
  base_metagroup_host:
    type: monitoredvm
    instances:
      deploy: 2
    properties:
      agent_config:
        user: { get_input: agent_user }
        install_method: remote
        port: 22
        key: { get_secret: agent_key_private }
      server:
        key_name: ''
        image: { get_input: image }
        flavor: { get_input: flavor }
        key_name: { get_input: key_name }
      openstack_config: *openstack_config
      management_network_name: { get_input: management_network_name }
      nagiosrest_monitoring:
        target_type: basic_group_instance_type
        groups:
            - ["Test check group", "includedgroup1"]
            - ["Test check group", "includedgroup2"]
            - ["Test check group", "notincludedgroup1"]
        address: { get_secret: nagiosrest_address }
        certificate: { get_secret: nagiosrest_certificate }
        username: { get_secret: nagiosrest_user }
        password: { get_secret: nagiosrest_pass }

  metagroup:
    type: cloudify.nagiosrest.nodes.MetaGroup
    properties:
      group_type: Test check group
      group_instance_prefix: included
      target: basemetagroup1
      unknown: ignore
      approach: sum
      interval: 0.25
      low_critical_threshold: 0.42
      low_reaction: *specific_scale_down
      nagiosrest_monitoring:
        address: { get_secret: nagiosrest_address }
        certificate: { get_secret: nagiosrest_certificate }
        username: { get_secret: nagiosrest_user }
        password: { get_secret: nagiosrest_pass }

  command:
    type: cloudify.arbitrary_commands.nodes.executor
    relationships:
      - type: cloudify.relationships.contained_in
        target: base_metagroup_host

outputs:
  ip_address:
    description: IP address
    value: { get_attribute: [base_metagroup_host, ip] }
